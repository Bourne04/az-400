{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "SQLAdmin": {
      "type": "String"
    },
    "location": {
      "type": "String"
    },
    "serverName": {
      "type": "String"
    },
    "enableADS": {
      "defaultValue": false,
      "type": "Bool"
    },
    "useVAManagedIdentity": {
      "defaultValue": false,
      "type": "Bool",
      "metadata": {
        "description": "To enable vulnerability assessments, the user deploying this template must have an administrator or owner permissions."
      }
    },
    "allowAzureIps": {
      "defaultValue": true,
      "type": "Bool"
    },
    "enableVA": {
      "defaultValue": false,
      "type": "Bool"
    },
    "serverTags": {
      "defaultValue": {},
      "type": "Object"
    }
  },
  "variables": {
    "subscriptionId": "[subscription().subscriptionId]",
    "resourceGroupName": "[resourceGroup().name]",
    "uniqueStorage": "[uniqueString(variables('subscriptionId'), variables('resourceGroupName'), parameters('location'))]",
    "storageName": "[tolower(concat('sqlva', variables('uniqueStorage')))]",
    "uniqueRoleGuid": "[guid(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), variables('storageBlobContributor'), resourceId('Microsoft.Sql/servers', parameters('serverName')))]",
    "StorageBlobContributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-04-01",
      "name": "[variables('storageName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "resources": [
        {
          "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
          "apiVersion": "2018-09-01-preview",
          "name": "[concat(variables('storageName'), '/Microsoft.Authorization/', variables('uniqueRoleGuid') )]",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
          ],
          "properties": {
            "roleDefinitionId": "[variables('StorageBlobContributor')]",
            "principalId": "[reference(resourceId('Microsoft.Sql/servers', parameters('serverName')), '2018-06-01-preview', 'Full').identity.principalId]",
            "scope": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
            "principalType": "ServicePrincipal"
          },
          "condition": "[parameters('useVAManagedIdentity')]"
        }
      ],
      "condition": "[parameters('enableVA')]"
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2019-06-01-preview",
      "name": "[parameters('serverName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('serverTags')]",
      "identity": "[if(and(parameters('enableVA'),parameters('useVAManagedIdentity')), json('{\"type\":\"SystemAssigned\"}'), json('null'))]",
      "properties": {
        "SQLAdmin": "[parameters('SQLAdmin')]",
        "SQLAdminPassword": {
            "reference": {
            "keyVault": {
            "id": "/subscriptions/<subscription-id>/resourceGroups/<rg-name>/providers/Microsoft.KeyVault/vaults/<vault-name>"
            },
            "secretName": "sqlpwd"
        },
        "version": "12.0"
      },
      "resources": [
        {
          "type": "firewallRules",
          "apiVersion": "2014-04-01-preview",
          "name": "AllowAllWindowsAzureIps",
          "location": "[parameters('location')]",
          "dependsOn": ["[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"],
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          },
          "condition": "[parameters('allowAzureIPs')]"
        },
        {
          "type": "securityAlertPolicies",
          "apiVersion": "2017-03-01-preview",
          "name": "Default",
          "dependsOn": ["[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"],
          "properties": {
            "state": "Enabled",
            "emailAccountAdmins": true
          },
          "condition": "[parameters('enableADS')]"
        },
        {
          "type": "vulnerabilityAssessments",
          "apiVersion": "2018-06-01-preview",
          "name": "Default",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('serverName'))]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
            "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/securityAlertPolicies/Default')]"
          ],
          "properties": {
            "storageContainerPath": "[if(parameters('enableVA'), concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))).primaryEndpoints.blob, 'vulnerability-assessment'), '')]",
            "storageAccountAccessKey": "[if(and(parameters('enableVA'),not(parameters('useVAManagedIdentity'))), listKeys(variables('storageName'), '2018-02-01').keys[0].value, '')]",
            "recurringScans": {
              "isEnabled": true,
              "emailSubscriptionAdmins": true
            }
          },
          "condition": "[parameters('enableVA')]"
        }
      ]
    }
  ]
}
